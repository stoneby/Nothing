/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace KXSGCodec
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class TeamInfo : TBase
  {
    private List<long> _listHeroUuid;

    public List<long> ListHeroUuid
    {
      get
      {
        return _listHeroUuid;
      }
      set
      {
        __isset.listHeroUuid = true;
        this._listHeroUuid = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool listHeroUuid;
    }

    public TeamInfo() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.List) {
              {
                ListHeroUuid = new List<long>();
                TList _list13 = iprot.ReadListBegin();
                for( int _i14 = 0; _i14 < _list13.Count; ++_i14)
                {
                  long _elem15 = 0;
                  _elem15 = iprot.ReadI64();
                  ListHeroUuid.Add(_elem15);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("TeamInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (ListHeroUuid != null && __isset.listHeroUuid) {
        field.Name = "listHeroUuid";
        field.Type = TType.List;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.I64, ListHeroUuid.Count));
          foreach (long _iter16 in ListHeroUuid)
          {
            oprot.WriteI64(_iter16);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("TeamInfo(");
      sb.Append("ListHeroUuid: ");
      sb.Append(ListHeroUuid);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
