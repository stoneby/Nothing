/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace KXSGCodec
{

  /// <summary>
  /// 道具详细信息
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SCItemDetail : TBase
  {
    private sbyte _bagType;
    private short _bagIndex;
    private int _initSkillId;
    private int _randSkillId;
    private int _equipHeroImgId;
    private string _matchInfo;
    private sbyte _matchStatus;

    /// <summary>
    /// 背包类型 0-主背包 1-回购背包
    /// </summary>
    public sbyte BagType
    {
      get
      {
        return _bagType;
      }
      set
      {
        __isset.bagType = true;
        this._bagType = value;
      }
    }

    public short BagIndex
    {
      get
      {
        return _bagIndex;
      }
      set
      {
        __isset.bagIndex = true;
        this._bagIndex = value;
      }
    }

    public int InitSkillId
    {
      get
      {
        return _initSkillId;
      }
      set
      {
        __isset.initSkillId = true;
        this._initSkillId = value;
      }
    }

    public int RandSkillId
    {
      get
      {
        return _randSkillId;
      }
      set
      {
        __isset.randSkillId = true;
        this._randSkillId = value;
      }
    }

    public int EquipHeroImgId
    {
      get
      {
        return _equipHeroImgId;
      }
      set
      {
        __isset.equipHeroImgId = true;
        this._equipHeroImgId = value;
      }
    }

    /// <summary>
    /// 羁绊信息
    /// </summary>
    public string MatchInfo
    {
      get
      {
        return _matchInfo;
      }
      set
      {
        __isset.matchInfo = true;
        this._matchInfo = value;
      }
    }

    /// <summary>
    /// 羁绊状态 0-未激活 1-激活
    /// </summary>
    public sbyte MatchStatus
    {
      get
      {
        return _matchStatus;
      }
      set
      {
        __isset.matchStatus = true;
        this._matchStatus = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool bagType;
      public bool bagIndex;
      public bool initSkillId;
      public bool randSkillId;
      public bool equipHeroImgId;
      public bool matchInfo;
      public bool matchStatus;
    }

    public SCItemDetail() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Byte) {
              BagType = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I16) {
              BagIndex = iprot.ReadI16();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              InitSkillId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              RandSkillId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              EquipHeroImgId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              MatchInfo = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Byte) {
              MatchStatus = iprot.ReadByte();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("SCItemDetail");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.bagType) {
        field.Name = "bagType";
        field.Type = TType.Byte;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(BagType);
        oprot.WriteFieldEnd();
      }
      if (__isset.bagIndex) {
        field.Name = "bagIndex";
        field.Type = TType.I16;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI16(BagIndex);
        oprot.WriteFieldEnd();
      }
      if (__isset.initSkillId) {
        field.Name = "initSkillId";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(InitSkillId);
        oprot.WriteFieldEnd();
      }
      if (__isset.randSkillId) {
        field.Name = "randSkillId";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(RandSkillId);
        oprot.WriteFieldEnd();
      }
      if (__isset.equipHeroImgId) {
        field.Name = "equipHeroImgId";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(EquipHeroImgId);
        oprot.WriteFieldEnd();
      }
      if (MatchInfo != null && __isset.matchInfo) {
        field.Name = "matchInfo";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(MatchInfo);
        oprot.WriteFieldEnd();
      }
      if (__isset.matchStatus) {
        field.Name = "matchStatus";
        field.Type = TType.Byte;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteByte(MatchStatus);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("SCItemDetail(");
      sb.Append("BagType: ");
      sb.Append(BagType);
      sb.Append(",BagIndex: ");
      sb.Append(BagIndex);
      sb.Append(",InitSkillId: ");
      sb.Append(InitSkillId);
      sb.Append(",RandSkillId: ");
      sb.Append(RandSkillId);
      sb.Append(",EquipHeroImgId: ");
      sb.Append(EquipHeroImgId);
      sb.Append(",MatchInfo: ");
      sb.Append(MatchInfo);
      sb.Append(",MatchStatus: ");
      sb.Append(MatchStatus);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
